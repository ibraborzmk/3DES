import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class DESTest {
    private DES des;

    @BeforeEach
    public void setUp() {
        des = new DES();
    }


    @Test
    public void testCrypteDecrypte() {
        DES des = new DES();

        // Test des cas simples de chiffrement et déchiffrement
        String messageOriginal = "Ceci est un message secret";
        int[] messageCode = des.crypte(messageOriginal);
        String messageDecrypte = des.decrypte(messageCode);

        assertEquals(messageOriginal, messageDecrypte);
    }
 
    @Test
    public void testDecoupage() {
        int[] bloc = des.stringToBits("Ceci est un message secret");
        int tailleBlocs = 64;
        int[][] blocsDecoupes = des.decoupage(bloc, tailleBlocs);
        int[][] expectedBlocs = {
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1}
        };

        for (int i = 0; i < blocsDecoupes.length; i++) {
            assertArrayEquals(expectedBlocs[i], blocsDecoupes[i]);
        }
    }
   
    // Ajoutez d'autres tests pour les autres fonctionnalités de votre classe DES

}

